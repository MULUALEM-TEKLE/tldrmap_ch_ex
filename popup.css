:root {
	/* NeoBrutalism Design System */
	--border-thickness: 2px;
	--shadow-offset: 5px;

	/* Light Theme */
	--neo-primary: #ffffff;
	--neo-secondary: #000000;
	--neo-accent: #00c853;
	--neo-border-light: #e0e0e0;
	--neo-destructive: #ff5252;
	--neo-neutral: #616161;
	--neo-shadow: #00000033;

	/* Markmap specific variables for light theme */
	--markmap-text-color: var(--neo-destructive);
	--markmap-a-color: var(--neo-accent);
	--markmap-line-color: var(--neo-secondary);
	--markmap-circle-open-bg: var(--neo-primary);
	--markmap-circle-closed-bg: var(
		--neo-secondary
	); /* Example for closed state */

	/* Transparent backgrounds for overlays */
	--neo-primary-transparent: rgba(255, 255, 255, 0.8);
	--neo-dark-primary-transparent: rgba(
		26,
		26,
		26,
		0.8
	); /* Corresponds to #1a1a1a */
}

.dark-mode {
	background-color: var(--neo-dark-primary);
	color: var(--neo-dark-secondary);
	/* border-color: var(--neo-dark-secondary); Should be applied to specific elements, not body */
	/* box-shadow: var(--shadow-offset) var(--shadow-offset) 0 0 var(--neo-dark-shadow); Should be applied to specific elements */

	/* Dark Theme */
	--neo-dark-primary: #1a1a1a;
	--neo-dark-secondary: #ffffff;
	--neo-dark-accent: #00c853;
	--neo-border-dark: #616161;
	--neo-dark-destructive: #ff5252;
	--neo-dark-neutral: #9e9e9e;
	--neo-dark-shadow: #ffffff33;

	/* Markmap specific variables for dark theme */
	--markmap-text-color: var(--neo-dark-secondary);
	--markmap-a-color: var(--neo-dark-accent);
	--markmap-line-color: var(--neo-dark-secondary);
	--markmap-circle-open-bg: var(--neo-dark-primary);
	--markmap-circle-closed-bg: var(--neo-dark-secondary);

	/* Transparent backgrounds for overlays */
	--neo-primary-transparent: var(--neo-dark-primary-transparent);
}

.dark-mode * {
	color: white;
}

body {
	background-color: var(--neo-primary);
	color: var(--neo-secondary);
}

.dark-mode body {
	background-color: var(--neo-dark-primary);
	color: var(--neo-dark-secondary);
}

#mindmap,
#mindmapContainer {
	background-color: var(
		--neo-primary
	); /* Or transparent if body bg should show */
}

.dark-mode #mindmap,
.dark-mode #mindmapContainer {
	background-color: var(--neo-dark-primary); /* Or transparent */
}

/* General link styling */
a {
	color: var(--neo-accent);
}

.dark-mode a {
	color: var(--neo-dark-accent);
}

/* Styles for Markmap SVG elements */
.markmap-node text {
	fill: var(--markmap-text-color);
}

.dark-mode .markmap-node text {
	fill: var(--neo-dark-secondary);
}

.markmap-node a {
	fill: var(--markmap-a-color);
}

.markmap-link {
	stroke: var(--markmap-line-color);
}

.markmap-node > circle {
	stroke: var(--markmap-line-color);
	fill: var(--markmap-circle-open-bg);
}

.markmap-node[data-depth="0"] > circle {
	stroke: var(--markmap-accent); /* Example: Highlight root node */
	fill: var(--markmap-accent);
}

.markmap-node:not(.markmap-expanded) > circle {
	fill: var(--markmap-circle-closed-bg); /* Style for collapsed nodes */
}

/* No need for duplicated .dark-mode rules for markmap elements if variables are correctly updated by .dark-mode context */
/* The variables --markmap-text-color etc. will change in .dark-mode context */

* {
	transition: color 0.3s ease, background-color 0.3s ease, border 0.3s ease;
	font-family: monospace;
	box-sizing: border-box;
	border-radius: 5px;
}

textarea {
	font-family: monospace;
}

body, #mindmapContainer /* Ensure #mindmapContainer is covered if it's the actual SVG parent */ {
	margin: 0;
	padding: 0;
	/* background is handled by body and #mindmap rules now */
	border: none;
	box-shadow: none;
}

#toolbar {
	background-color: transparent !important;
}

/* Styling for Markmap Toolbar SVG Icons */
#toolbar button svg {
	fill: var(--neo-secondary);
}

.dark-mode #toolbar button svg {
	fill: var(--neo-dark-secondary);
}

/* body specific styles were moved up to ensure they are applied first */
/* body {
	margin: 0;
	padding: 0;
	background: black;
	border: none;
	box-shadow: none;
	border-radius: 0;
	height: 500px;
	width: 700px;
} */

#generateButton,
#downloadButton,
#settingsButton,
#saveApiKey,
#clearApiKey,
#cancelApiKey,
#saveDefaultPrompt {
	background-color: var(--neo-neutral);
	color: var(--neo-secondary);
	color: var(--neo-secondary);
	background: var(--neo-primary);
	border: var(--border-thickness) solid var(--neo-border-light);
	padding: 12px 24px;
	cursor: pointer;
	box-shadow: calc(var(--shadow-offset) / 2) calc(var(--shadow-offset) / 2) 0 0
		var(--neo-shadow);
	transition: all 0.2s ease;
}

button:hover {
	transform: translate(2px, 2px);
	box-shadow: 2px 2px 0 0 var(--neo-secondary);
}

.dark-mode #generateButton,
.dark-mode #downloadButton,
.dark-mode #settingsButton,
.dark-mode #saveApiKey,
.dark-mode #clearApiKey,
.dark-mode #saveDefaultPrompt {
	background-color: var(--neo-dark-primary);
	color: var(--neo-dark-secondary);
	border: var(--border-thickness) solid var(--neo-border-dark);
}

/* Ensure button text color contrasts with background in dark mode if not using variables directly */
.dark-mode #generateButton,
.dark-mode #downloadButton,
.dark-mode #settingsButton,
.dark-mode #saveApiKey,
.dark-mode #clearApiKey,
.dark-mode #saveDefaultPrompt {
	color: var(
		--neo-dark-secondary
	); /* Ensure text is light on dark background */
}

#generateButton:disabled,
#downloadButton:disabled,
#apiKeyDialog button:disabled {
	background-color: var(--neo-shadow);
	cursor: not-allowed;
	color: var(--neo-secondary);
	opacity: 0.5;
	transform: none;
	box-shadow: none;
}

#generateButton:disabled:hover,
#downloadButton:disabled:hover,
#apiKeyDialog button:disabled:hover {
	cursor: not-allowed;
}

.support {
	position: fixed;
	top: 1%;
	left: 1%;
}

#modeButton {
	position: absolute;
	top: 0.5rem;
	right: 0.5rem;
	padding: 0.5rem 1rem;
	border-radius: 0.5rem;
	border: none;
	cursor: pointer;
}

:root {
	--icon-color-light: black;
	--icon-color-dark: goldenrod;
}

#modeButton img {
	color: var(--icon-color-light); /* Black color in light mode */
}

.dark-mode #modeButton img {
	color: var(--icon-color-dark); /* Golden color in dark mode */
}

/* .dark-mode * {
	color: white;
} */

.buttons-container {
	display: flex;
	width: fit-content;
	height: fit-content;
	gap: 10px;
	position: fixed;
	bottom: 1%;
	left: 1%;
	/* margin: 5px; */
}

#apiKeyDialog {
	display: flex;
	flex-direction: column;
	align-items: stretch;
	position: fixed;
	background: var(--neo-primary);
	top: 50%;
	left: 50%;
	transform: translate(-50%, -50%);
	padding: 2.5rem;
	border: var(--border-thickness) solid var(--neo-secondary);
	box-shadow: var(--shadow-offset) var(--shadow-offset) 0 0 var(--neo-shadow);
	z-index: 1001;
	max-width: 90vw;
	width: 450px;
	gap: 1.5rem;
	border-radius: 12px;
}

#apiKeyDialog input,
#apiKeyDialog textarea {
	width: 100%;
	padding: 0.75rem 1rem;
	border: var(--border-thickness) solid var(--neo-secondary);
	border-radius: 8px;
	font-size: 1rem;
	background: var(--neo-primary);
	color: var(--neo-secondary);
	transition: all 0.2s ease;
}

#apiKeyDialog input:focus,
#apiKeyDialog textarea:focus {
	outline: none;
	box-shadow: var(--shadow-offset) var(--shadow-offset) 0 0 var(--neo-shadow);
	transform: translate(-2px, -2px);
}

#apiKeyDialog button {
	padding: 0.75rem 1.5rem;
	margin: 0.5rem;
	border: var(--border-thickness) solid var(--neo-secondary);
	border-radius: 8px;
	cursor: pointer;
	background: var(--neo-primary);
	color: var(--neo-secondary);
	display: inline-flex;
	align-items: center;
	justify-content: center;
	gap: 0.5rem;
	transition: all 0.2s ease;
}

#apiKeyDialog .button-group {
	display: flex;
	justify-content: center;
	gap: 1rem;
	margin-top: 1rem;
}

#apiKeyDialog .cancel-button {
	padding: 0.5rem;
	border: 1px solid red;
	border-radius: 50%;
	cursor: pointer;
	position: absolute;
	top: -1.5rem;
	right: -1.5rem;
	background: var(--neo-primary);
	display: flex;
	align-items: center;
	justify-content: center;
	transition: all 0.2s ease;
}

#apiKeyDialog .cancel-button:hover {
	background: var(--neo-accent);
	transform: rotate(90deg);
}

#apiKeyDialog button:disabled {
	background-color: var(--neo-shadow);
	cursor: not-allowed;
	color: var(--neo-secondary);
	opacity: 0.5;
	transform: none;
	box-shadow: none;
}

#apiKeyDialog button:disabled:hover {
	cursor: not-allowed;
}

#apiKeyDialog #apiKeyStatus,
#apiKeyDialog #defaultPromptStatus {
	margin: 0.5rem 0;
	font-size: 0.9rem;
	color: var(--neo-accent);
}

body.apiKeyDialogOpen {
	overflow: hidden;
}

.dark-mode #apiKeyDialog {
	background-color: var(--neo-dark-primary); /* Use variable */
	color: var(--neo-dark-secondary); /* Use variable */
	border: var(--border-thickness) solid var(--neo-dark-secondary); /* Add border for consistency */
}

.dark-mode #apiKeyDialog input,
.dark-mode #apiKeyDialog textarea {
	background-color: var(--neo-dark-primary);
	color: var(--neo-dark-secondary);
	border: var(--border-thickness) solid var(--neo-dark-secondary);
}

.dark-mode #apiKeyDialog button {
	background-color: var(--neo-dark-primary); /* Dialog background */
	color: var(--neo-dark-secondary); /* Dialog text color */
	border: var(--border-thickness) solid var(--neo-dark-secondary); /* Dialog border color */
}

.dark-mode #apiKeyDialog button:hover {
	background-color: var(--neo-dark-accent); /* Or a slightly different shade */
	color: var(--neo-dark-primary); /* Text color on hover */
}

.dark-mode #apiKeyDialog .cancel-button {
	background: var(--neo-dark-primary);
	border: 1px solid var(--neo-dark-destructive); /* Use destructive color for cancel */
}
.dark-mode #apiKeyDialog .cancel-button:hover {
	background: var(--neo-dark-destructive);
	transform: rotate(90deg);
}

.dark-mode #apiKeyDialog #apiKeyStatus,
.dark-mode #apiKeyDialog #defaultPromptStatus {
	color: var(
		--neo-dark-accent
	); /* Ensure status text uses accent color in dark mode */
}

/* Removed .dark-mode #loadingIndicator as #loadingIndicator does not exist */

#loadingOverlay {
	position: fixed;
	top: 0;
	left: 0;
	width: 100%;
	height: 100%;
	background: var(
		--neo-primary-transparent
	); /* Use a variable for transparency */
	display: flex;
	justify-content: center;
	align-items: center;
	z-index: 1000;
	display: none; /* Initially hidden */
}
.dark-mode #loadingOverlay {
	background: var(
		--neo-dark-primary-transparent
	); /* Dark mode transparent background */
}

#loadingOverlay .spinner {
	border: 16px solid var(--neo-shadow); /* Use shadow or a light grey for spinner track */
	border-top: 16px solid var(--neo-accent); /* Spinner progress color */
	border-radius: 50%;
	width: 120px;
	height: 120px;
	animation: spin 2s linear infinite;
}

@keyframes spin {
	0% {
		transform: rotate(0deg);
	}
	100% {
		transform: rotate(360deg);
	}
}

@keyframes pulse {
	0% {
		transform: scale(1);
	}
	50% {
		transform: scale(1.1);
	}
	100% {
		transform: scale(1);
	}
}
